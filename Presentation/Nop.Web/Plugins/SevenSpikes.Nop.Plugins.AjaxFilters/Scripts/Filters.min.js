/*
* Copyright 2015 Seven Spikes Ltd. All rights reserved. (http://www.nop-templates.com)
* http://www.nop-templates.com/t/licensinginfo
*/

function FiltersManager() { this.isOnSearchPage = $(".nopAjaxFilters7Spikes").attr("data-isonsearchpage"), this.keyword = $(".nopAjaxFilters7Spikes").attr("data-searchkeyword"), this.searchCategoryId = $(".nopAjaxFilters7Spikes").attr("data-searchcategoryid"), this.searchManufacturerId = $(".nopAjaxFilters7Spikes").attr("data-searchmanufacturerid"), this.priceFrom = $(".nopAjaxFilters7Spikes").attr("data-searchpricefrom"), this.priceTo = $(".nopAjaxFilters7Spikes").attr("data-searchpriceto"), this.includeSubcategories = $(".nopAjaxFilters7Spikes").attr("data-searchincludesubcategories"), this.searchInProductDescriptions = $(".nopAjaxFilters7Spikes").attr("data-searchinproductdescriptions"), this.advancedSearch = $(".nopAjaxFilters7Spikes").attr("data-searchadvancedsearch"), this.categoryId = $(".nopAjaxFilters7Spikes").attr("data-categoryId"), this.manufacturerId = $(".nopAjaxFilters7Spikes").attr("data-manufacturerId"), this.vendorId = $(".nopAjaxFilters7Spikes").attr("data-vendorId"), this.getFilteredProductsUrl = $(".nopAjaxFilters7Spikes").attr("data-getFilteredProductsUrl"), this.filtersUIMode = $(".nopAjaxFilters7Spikes").attr("data-filtersUIMode"), this.filtersUIModeEnum = { userCheckboxes: "usecheckboxes", useDropDowns: "usedropdowns" }, this.selectedFilterGroupElement = void 0, this.selectedFilterOptionElement = void 0, this.isProductRefreshTriggeredByScroll = !1, this.requestProductsForSelectedFilters = RequestProductsForSelectedFilters, this.getSpecificationFiltersModel = GetSpecificationFiltersModel, this.getAttributeFiltersModel = GetAttributeFiltersModel, this.getManufacturerFiltersModel = GetManufacturerFiltersModel, this.getVendorFiltersModel = GetVendorFiltersModel, this.getOnSaleFiltersModel = GetOnSaleFiltersModel, this.getPriceRangeFilterModel = GetPriceRangeFilterModel, this.refreshProducts = RefreshProducts, this.refreshProductsPager = RefreshProductsPager, this.replaceSortAndViewOptionsDropDowns = ReplaceSortAndViewOptionsDropDowns, this.setPagerLinks = SetPagerLinks, this.getProductsPanelSelector = GetProductsPanelSelector, this.getPagerPanelSelector = GetPagerPanelSelector, this.getSortOptionsDropDownSelector = GetSortOptionsDropDownSelector, this.getViewOptionsDropDownSelector = GetViewOptionsDropDownSelector, this.getProductsPageSizeDropDownSelector = GetProductsPageSizeDropDownSelector, this.sortProducts = SortProducts, this.changeViewMode = ChangeViewMode, this.changePageSize = ChangePageSize, this.clearFilterOptions = ClearFilterOptions, this.clearFilterOptionsForFiltersGroupElement = ClearFilterOptionsForFiltersGroupElement, this.selectAllFilterDropDownOption = SelectAllFilterDropDownOption, this.clearAllFilterOptions = ClearAllFilterOptions, this.refreshClearButtons = RefreshClearButtons, this.expandFilterPanelsWithSelectedOptions = ExpandFilterPanelsWithSelectedOptions, this.changeViewModeOrderByAndPageSize = ChangeViewModeOrderByAndPageSize, this.setPriceRangeValues = SetPriceRangeValues, this.refreshFilters = RefreshFilters, this.addProductPanelAjaxBusyToPage = function () { var e = getProductsPanel(); e.addClass("ajaxBusyPanelParent " + nop7SpikesAjaxFiltersGridClass), e.css("position", "relative"), e.append($('<div class="productPanelAjaxBusy"></div><div class="clear"></div>')), $(".productPanelAjaxBusy").hide(), appendInfiniteScrollLoader() }, this.setSpecificationFilterSelection = function (e, t) { this.selectedFilterGroupElement = e, this.selectedFilterOptionElement = t }, this.determineIfRequestIsValidForControlState = function (e) { var t = !1; return (void 0 == e || "filterItemUnselected" == e.attr("class") || "filterItemSelected" == e.attr("class") && this.filtersUIMode == this.filtersUIModeEnum.userCheckboxes) && (t = !0), t }, this.changeControlsState = function (e) { if (void 0 != e) { var t = e.attr("class"); if ("filterItemSelected" == t ? e.attr("class", "filterItemUnselected") : "filterItemUnselected" == t && e.attr("class", "filterItemSelected"), void 0 != this.selectedFilterGroupElement && this.filtersUIMode == this.filtersUIModeEnum.useDropDowns) { var r = this.selectedFilterOptionElement; this.selectedFilterGroupElement.find("a[data-option-id],[data-option-ids]").each(function (e, t) { "filterItemSelected" == $(t).attr("class") && t != r.get(0) && $(t).attr("class", "filterItemUnselected") }) } } }, this.showNoProductsModalDialog = function () { var e = $("#nopAjaxFiltersNoProductsDialog").data("kendoWindow"), t = $("#nopAjaxFiltersNoProductsDialog").attr("title"); t || (t = "NO RESULTS FOUND"), e || (e = $("#nopAjaxFiltersNoProductsDialog").kendoWindow({ draggable: !1, resizable: !1, width: "300px", height: "100px", title: t, modal: !0, actions: ["Close"], animation: !1, visible: !1 }).data("kendoWindow"), e.wrapper.addClass("ajaxFilters")), $("body").on("click", ".k-overlay", function () { $(".k-window.ajaxFilters .k-window-actions .k-icon").click() }), e.center(), e.open() }, this.showProductPanelAjaxBusy = function () { $(".productPanelAjaxBusy").show() }, this.hideProductPanelAjaxBusy = function () { $(".productPanelAjaxBusy").hide() } } function RequestProductsForSelectedFilters(e, t, r, i, o, a, s) { if (!FiltersManager.waitForAjaxRequest && "#/noFilterApplied" != i && this.determineIfRequestIsValidForControlState(t)) { this.isProductRefreshTriggeredByScroll = s || !1, void 0 == i ? i = "" : a = !0, this.setSpecificationFilterSelection(e, t), this.changeControlsState(t); var l = this.getSpecificationFiltersModel(), n = this.getAttributeFiltersModel(), d = this.getManufacturerFiltersModel(), c = this.getVendorFiltersModel(), p = this.getOnSaleFiltersModel(), u = this.getPriceRangeFilterModel(); void 0 == r && (r = null); var h = $(".sortOptionsDropDown").attr("data-DropDownOptionsSelectedValue") || $(".nopAjaxFilters7Spikes").attr("data-defaultsortoption") || null, f = this.getViewOptionsDropDownSelector(), g = $(f).filter(".selected"), S = !1; g.length > 0 && (S = !0, $(".viewOptionsDropDown").attr("data-DropDownOptionsSelectedValue", g.attr("data-dropdownoptionvalue"))); var F = $(".viewOptionsDropDown").attr("data-DropDownOptionsSelectedValue") || null, v = $(".productsPageSizeDropDown").attr("data-DropDownOptionsSelectedValue") || null, w = $.getUrlVar("pagenumber"); void 0 == w || null != r || void 0 != o && 0 != o || (r = w), void 0 == a && (a = !1); var D = { categoryId: this.categoryId, manufacturerId: this.manufacturerId, vendorId: this.vendorId, priceRangeFilterModel7Spikes: u, specificationFiltersModel7Spikes: l, attributeFiltersModel7Spikes: n, manufacturerFiltersModel7Spikes: d, vendorFiltersModel7Spikes: c, pageNumber: r, orderby: h, viewmode: F, pagesize: v, queryString: i, shouldNotStartFromFirstPage: a, onSaleFilterModel: p, keyword: this.keyword, searchCategoryId: this.searchCategoryId, searchManufacturerId: this.searchManufacturerId, priceFrom: this.priceFrom, priceTo: this.priceTo, includeSubcategories: this.includeSubcategories, searchInProductDescriptions: this.searchInProductDescriptions, advancedSearch: this.advancedSearch, isOnSearchPage: this.isOnSearchPage }; this.isProductRefreshTriggeredByScroll || this.showProductPanelAjaxBusy(); var P = this, m = this.getFilteredProductsUrl; FiltersManager.waitForAjaxRequest = !0, $.ajax({ cache: !1, type: "POST", data: $.toJSON(D), contentType: "application/json; charset=utf-8", url: m }).done(function (e) { "" != i && (P.changeViewModeOrderByAndPageSize(e, S), P.setPriceRangeValues(e)); var t = P.refreshProducts(e, P.isProductRefreshTriggeredByScroll); if (!t) return P.changeControlsState(P.selectedFilterOptionElement), void (FiltersManager.waitForAjaxRequest = !1); if (P.refreshFilters(e), P.refreshProductsPager(e), P.refreshClearButtons(), "NO HASH QUERY" != i) { P.expandFilterPanelsWithSelectedOptions(); var r = $(e).filter("#urlHashQuery").val().toString(); "" != r ? (P.isProductRefreshTriggeredByScroll && (r = r.slice(0, r.indexOf("&pageNumber"))), $.address.value(r)) : $.address.value("noFilterApplied") } P.hideProductPanelAjaxBusy(), FiltersManager.waitForAjaxRequest = !1; var o = $(".nopAjaxFilters7Spikes").attr("data-scrollToElement"); if (!P.isProductRefreshTriggeredByScroll && void 0 != o && "true" == o.toLowerCase()) { var a = $(".nopAjaxFilters7Spikes").attr("data-scrollToElementSelector"), s = a.split(","), l = ".product-selectors"; if (void 0 != s && s.length > 0) { for (var n = 0; n < s.length; n++) if ($(s[n].trim()).length > 0) { l = s[n].trim(); break } $(l).length > 0 && $("html, body").animate({ scrollTop: $(l).offset().top }, "slow") } } $(".productPanelAjaxBusy").length < 1 && P.addProductPanelAjaxBusyToPage(); var d = $(e).filter("#totalCount").val().toString(); if ($.event.trigger({ type: "nopAjaxFiltersFiltrationCompleteEvent", totalCount: d }), "true" == $(".nopAjaxFilters7Spikes").attr("data-showSelectedFiltersPanel").toLowerCase() && showSelectedOptions(), "true" !== $(".nopAjaxFilters7Spikes").attr("data-enableinfinitescroll").toLowerCase() && "false" !== $(".nopAjaxFilters7Spikes").attr("data-numberofreturnedproductsselector").toLowerCase()) { var c = v; $(".page-body .product-grid:not(.featured-product-grid)").length > 0 ? c = $(".page-body .product-grid:not(.featured-product-grid) .item-box").length : $(".page-body .product-list").length > 0 && (c = $(".page-body .product-list .item-box").length), showNumberOfReturnedProducts(c, d) } }).fail(function () { P.hideProductPanelAjaxBusy(), alert("Loading the page failed."), FiltersManager.waitForAjaxRequest = !1 }).always(function () { P.isProductRefreshTriggeredByScroll = !1 }) } } function RefreshFilters(e) { var t = this, r = $(e).filter("#specificationFilterModel7SpikesJson").val().toString(), i = $.parseJSON(r); void 0 != t.refreshSpecificationFilters && t.refreshSpecificationFilters(i, t.filtersUIMode); var o = $(e).filter("#attributeFilterModel7SpikesJson").val().toString(), a = $.parseJSON(o); void 0 != t.refreshAttributeFilters && t.refreshAttributeFilters(a, t.filtersUIMode); var s = $(e).filter("#manufacturerFilterModel7SpikesJson").val().toString(), l = $.parseJSON(s); void 0 != t.refreshManufacturerFilters && t.refreshManufacturerFilters(l, t.filtersUIMode); var n = $(e).filter("#vendorFilterModel7SpikesJson").val().toString(), d = $.parseJSON(n); void 0 != t.refreshVendorFilters && t.refreshVendorFilters(d, t.filtersUIMode); var c = $(e).filter("#onSaleFilterModel7SpikesJson").val().toString(), p = $.parseJSON(c); void 0 != t.refreshOnSaleFilters && t.refreshOnSaleFilters(p, t.filtersUIMode) } function SetPriceRangeValues(e) { var t = this, r = $(e).filter("#priceRangeFromJson").val().toString(), i = $.parseJSON(r), o = $(e).filter("#priceRangeToJson").val().toString(), a = $.parseJSON(o); void 0 != t.SetSliderValues && t.SetSliderValues(i, a) } function RequestProductsForPagerLink(e) { var t = $(e.currentTarget).attr("data-pageNumber"); null != e.data && void 0 != e.data.filtersManager && e.data.filtersManager.requestProductsForSelectedFilters(void 0, void 0, t, void 0, void 0, !0) } function GetSpecificationFiltersModel() { var e = null; return void 0 != this.buildSpecificationFiltersModel && (e = this.buildSpecificationFiltersModel(this.categoryId, this.manufacturerId, this.vendorId, this.selectedFilterGroupElement)), e } function GetAttributeFiltersModel() { var e = null; return void 0 != this.buildAttributeFiltersModel && (e = this.buildAttributeFiltersModel(this.categoryId, this.manufacturerId, this.vendorId, this.selectedFilterGroupElement)), e } function GetManufacturerFiltersModel() { var e = null; return void 0 != this.buildManufacturerFiltersModel && (e = this.buildManufacturerFiltersModel(this.categoryId, this.selectedFilterGroupElement)), e } function GetVendorFiltersModel() { var e = null; return void 0 != this.buildVendorFiltersModel && (e = this.buildVendorFiltersModel(this.categoryId, this.selectedFilterGroupElement)), e } function GetOnSaleFiltersModel() { var e = null; return void 0 != this.buildOnSaleFiltersModel && (e = this.buildOnSaleFiltersModel(this.categoryId, this.manufacturerId, this.vendorId, this.selectedFilterGroupElement)), e } function GetPriceRangeFilterModel() { var e = null; return void 0 != this.buildPriceRangeFilterModel && (e = this.buildPriceRangeFilterModel(this.categoryId, this.manufacturerId, this.vendorId, this.selectedFilterGroupElement)), e } function RefreshProducts(e, t) { var r, i = $(".viewOptionsDropDown").attr("data-DropDownOptionsSelectedValue") || $(".nopAjaxFilters7Spikes").attr("data-defaultViewMode"), o = this.getProductsPanelSelector(i), a = $("." + nop7SpikesAjaxFiltersGridClass); if (null != $(e).filter(o).html()) { if (a.length > 1 && (a = a.last()), t) { var s = $(e).filter(o), l = s.find(".item-box"); s.hasClass("product-grid") ? a.hasClass("product-list") && a.removeClass("product-list").addClass("product-grid") : a.hasClass("product-grid") && a.removeClass("product-grid").addClass("product-list"), $(".infinite-scroll-loader").hide(), a.find(".item-box").last().after(l) } else a.replaceWith($(e).filter(o)); r = !0 } else this.hideProductPanelAjaxBusy(), $("#nopAjaxFiltersNoProductsDialog").length > 0 ? this.showNoProductsModalDialog() : (a.prepend($(e).filter("#nopAjaxFiltersNoProductsDialog")), this.showNoProductsModalDialog()), r = !1; return r } function GetProductsPanelSelector(e) { return "list" == e ? $(".nopAjaxFilters7Spikes").attr("data-ProductsListPanelSelector") || ".product-list" : $(".nopAjaxFilters7Spikes").attr("data-productsGridPanelSelector") || ".product-grid" } function GetPagerPanelSelector() { return $(".nopAjaxFilters7Spikes").attr("data-pagerPanelSelector") || ".pager" } function RefreshProductsPager(e) { var t = this.getPagerPanelSelector(), r = $(t); if (void 0 !== e) { var i = $(e).filter(t); if (0 == r.length && i.length > 0) { var o = $(".nopAjaxFilters7Spikes").attr("data-pagerpanelintegrationselector") || ".product-grid, .product-list", a = $(o); a.length > 0 && (a.hasClass("product-grid") || a.hasClass("product-list")) && (a = a.not(".featured-product-grid").last()), 0 == a.length && (a = getProductsPanel()), a.after('<div class="pager"></div>'), r = $(t) } r.html(i.html()), r.length > 0 && 0 == i.length && r.remove() } this.setPagerLinks(r) } function SetPagerLinks(e) { var t = this; e.find("a").each(function () { var e = $(this).attr("href"), r = ""; if (void 0 != e) { var i = /pagenumber=(\d+)/; e = e.toLowerCase(); var o = i.exec(e); null != o && o.length > 1 && (r = o[1]) } $(this).removeAttr("href"), $(this).attr("data-pageNumber", r), $(this).click({ filtersManager: t }, RequestProductsForPagerLink) }) } function getIdOrClassSelector(e) { if ($(e).length > 0) return e; var t = e.slice(1); return e.startsWith("#") ? "." + t : e.startsWith(".") ? "#" + t : e } function GetSortOptionsDropDownSelector() { var e = $(".nopAjaxFilters7Spikes").attr("data-sortOptionsDropDownSelector") || ".products-orderby"; return getIdOrClassSelector(e) } function GetViewOptionsDropDownSelector() { var e = $(".nopAjaxFilters7Spikes").attr("data-viewOptionsDropDownSelector") || ".products-viewmode, .viewmode-icon"; return getIdOrClassSelector(e) } function GetProductsPageSizeDropDownSelector() { var e = $(".nopAjaxFilters7Spikes").attr("data-productsPageSizeDropDownSelector") || ".products-pagesize"; return getIdOrClassSelector(e) } function ChangeViewModeOrderByAndPageSize(e, t) { var r = $(e).filter("#currentPageSizeJson").val().toString(), i = $.parseJSON(r), o = $(e).filter("#currentOrderByJson").val().toString(), a = $.parseJSON(o), s = $(e).filter("#currentViewModeJson").val().toString(), l = $.parseJSON(s), n = $(".sortOptionsDropDown"), d = $(".viewOptionsDropDown"), c = $(".productsPageSizeDropDown"); if (null == t && (t = !1), t && (d = $(this.getViewOptionsDropDownSelector())), 0 != n.length || 0 != d.length || 0 != c.length) { var p = new Array, u = new Array, h = new Array, f = PopulateOptions(n, p, "#availableSortOptionsJson", a), g = PopulateOptions(d, u, "#availableViewModesJson", l), S = PopulateOptions(c, h, "#availablePageSizesJson", i); void 0 != i && SetSelectedElementByDropdownSelector(c, S, h), void 0 != a && SetSelectedElementByDropdownSelector(n, f, p), void 0 != l && SetSelectedElementByDropdownSelector(d, g, u, t) } } function SetSelectedElementByDropdownSelector(e, t, r, i) { var o = e.find("li").eq(t); if (i === !0) { o = e.eq(t), e.removeClass("selected"); var a = ".grid"; e.eq(t).hasClass("list") && (a = ".list"), e.filter(a).addClass("selected") } o.length > 0 && void 0 != e && (e.each(function () { this.selectedLiElement = o, void 0 !== this.par && this.par.text(o.text()) }), i === !0 && (e = $(".viewOptionsDropDown")), e.attr("data-dropDownOptionsSelectedValue", r[t].dropDownOptionValue)) } function ReplaceSortAndViewOptionsDropDowns() { var e = this.getSortOptionsDropDownSelector(), t = $(e), r = this.getViewOptionsDropDownSelector(), i = $(r), o = this.getProductsPageSizeDropDownSelector(), a = $(o), s = i.is("select"); if (0 != t.length || 0 != i.length || 0 != a.length) { var l = new Array, n = new Array, d = new Array, c = PopulateOptions(t, l, "#availableSortOptionsJson"), p = PopulateOptions(i, n, "#availableViewModesJson"), u = PopulateOptions(a, d, "#availablePageSizesJson"), h = nop_store_directory_root + "Plugins/SevenSpikes.Nop.Plugins.AjaxFilters/JQueryTemplates/JDropDown.htm", f = this; $.ajax({ url: h, async: !1, success: function (e) { $.template("jDropDownTemplate", e), t.each(function (e) { var t = { jDropDownId: "sortOptionsDropDown" + e, jDropDownCss: "sortOptionsDropDown", dropDownOptions: l }; $.tmpl("jDropDownTemplate", t, { selectedOptionIndex: c, dropDownOptionClickCallback: "new FiltersManager().sortProducts" }).insertAfter($(this)), $(this).attr("data-dropDownOptionsSelectedValue", l[c].dropDownOptionValue) }), t.remove(), i.length > 0 && (s ? (i.each(function (e) { var t = { jDropDownId: "viewOptionsDropDown" + e, jDropDownCss: "viewOptionsDropDown", dropDownOptions: n }; $.tmpl("jDropDownTemplate", t, { selectedOptionIndex: p, dropDownOptionClickCallback: "new FiltersManager().changeViewMode" }).insertAfter($(this)), $(".viewOptionsDropDown").attr("data-dropDownOptionsSelectedValue", n[selectedOptionIndex].dropDownOptionValue) }), i.remove()) : (i.filter(".grid").attr("data-dropdownoptionvalue", "grid"), i.filter(".list").attr("data-dropdownoptionvalue", "list"), i.parent().append('<input type="hidden" class="viewOptionsDropDown" value="icons" data-DropDownOptionsSelectedValue="' + i.filter(".selected").attr("data-dropdownoptionvalue") + '" />'), i.on("click", function (e) { e.preventDefault(), $(this).hasClass("selected") || (i.removeClass("selected"), $(this).addClass("selected"), f.changeViewMode(e)) }))), a.each(function (e) { var t = { jDropDownId: "productsPageSizeDropDown" + e, jDropDownCss: "productsPageSizeDropDown", dropDownOptions: d }; $.tmpl("jDropDownTemplate", t, { selectedOptionIndex: u, dropDownOptionClickCallback: "new FiltersManager().changePageSize" }).insertAfter($(this)), $(this).attr("data-dropDownOptionsSelectedValue", d[u].dropDownOptionValue) }), a.remove() }, error: function () { alert("Retrieving " + h + " failed.") } }) } } function PopulateOptions(e, t, r, i) { var o = 0; if (e.length > 0) { var a = $(r).val().toString(), s = $.parseJSON(a); $.each(s, function (e, r) { t.push({ dropDownOptionName: r.Text, dropDownOptionValue: r.Value }), i ? r.Value == i && (o = e) : 0 == o && r.Selected && (o = e) }) } return o } function SortProducts(e) { changeDropDownSelectedOption(".sortOptionsDropDown", e.currentTarget); var t = new FiltersManager; t.requestProductsForSelectedFilters() } function ChangeViewMode(e) { var t = $(e.currentTarget).attr("data-DropDownOptionValue"); changeDropDownSelectedOption(".viewOptionsDropDown", e.currentTarget); var r = new FiltersManager, i = $(r.getViewOptionsDropDownSelector()); i.is("select") || i.removeClass("selected").filter("." + t).addClass("selected"), r.requestProductsForSelectedFilters(void 0, void 0, void 0, void 0, void 0, !0) } function ChangePageSize(e) { changeDropDownSelectedOption(".productsPageSizeDropDown", e.currentTarget); var t = new FiltersManager; t.requestProductsForSelectedFilters() } function changeDropDownSelectedOption(e, t) { var r = $(t).attr("data-DropDownOptionValue"); $(e).each(function () { var e = $(this).find('[data-dropdownoptionvalue="' + r + '"]').parent("li"); this.selectedLiElement = e, void 0 !== this.par && this.par.text(e.text()) }).attr("data-DropDownOptionsSelectedValue", r) } function SelectAllFilterDropDownOption(e) { var t = $(e.currentTarget), r = t.parents(".filtersGroupPanel"), i = e.data.filtersManager; i.clearFilterOptionsForFiltersGroupElement(r) } function ClearFilterOptions(e) { var t = $(e.currentTarget), r = t.parent().siblings(".filtersGroupPanel"), i = e.data.filtersManager; i.clearFilterOptionsForFiltersGroupElement(r) } function ClearFilterOptionsForFiltersGroupElement(e) { $(e).find("a[data-option-id], a[data-optionsGroupId]").each(function (e, t) { "filterItemSelected" == $(t).attr("class") ? $(t).attr("class", "filterItemUnselected") : "filterItemSelectedDisabled" == $(t).attr("class") && $(t).attr("class", "filterItemDisabled") }), this.filtersUIMode == this.filtersUIModeEnum.useDropDowns && $(e).find(".filtersDropDown").jDropDown({ method: "reset" }); var t = e; this.requestProductsForSelectedFilters(t, void 0) } function ClearAllFilterOptions(e) { $(".nopAjaxFilters7Spikes .filtersGroupPanel").each(function (e, t) { $(t).find("a[data-option-id], a[data-optionsGroupId]").each(function (e, t) { $(t).attr("class", "filterItemUnselected") }) }); var t = e.data.filtersManager; t.filtersUIMode == t.filtersUIModeEnum.useDropDowns && $(".nopAjaxFilters7Spikes .filtersGroupPanel .filtersDropDown").jDropDown({ method: "reset" }), void 0 != t.clearPriceRangeFilterControl && t.clearPriceRangeFilterControl(), t.requestProductsForSelectedFilters() } function RefreshClearButtons() { var e = !1; $(".nopAjaxFilters7Spikes .filtersGroupPanel").each(function (t, r) { var i = !1; $(r).find("a[data-option-id], a[data-optionsGroupId]").each(function (e, t) { return "filterItemSelected" == $(t).attr("class") ? (i = !0, !1) : void 0 }); var o = $(r).parent().find("a.clearFilterOptions"); i ? (o.show(), e = !0) : o.hide() }); var t = $(".nopAjaxFilters7Spikes .filtersTitlePanel a.clearFilterOptionsAll"); if (e) t.show(); else { var r = !1; void 0 != this.determineIfPriceRangeHasBeenSelected && (r = this.determineIfPriceRangeHasBeenSelected()), r ? t.show() : t.hide() } } function ExpandFilterPanelsWithSelectedOptions() { $(".clearPriceRangeFilter, .clearFilterOptions").filter(":visible").siblings("a.toggleControl.closed").click() } function expandableFiltersBlocks(e) { 1 == e.hasClass("closed") ? e.removeClass("closed") : e.addClass("closed"), e.parent().siblings(".filtersGroupPanel").slideToggle("slow", function () { $(this).css("overflow", "") }) } function showSelectedOptions() { var e = $(".nopAjaxFilters7Spikes").first(); e.find(".filtersPanel").first().prepend($(".block.filter-block.selected-options").first()); var t = $(".block.filter-block.selected-options").first(), r = t.find(".selected-options-list"); r.empty(), t.find("a.toggleControl").off("click").on("click", function () { expandableFiltersBlocks($(this)) }); var i = e.find(".priceRangeFilterPanel7Spikes"); if (i.length > 0) { var o = i.find("#slider"), a = o.attr("data-sliderminvalue"), s = o.attr("data-slidermaxvalue"), l = $(".priceRangeCurrentPricesPanel .currentMinPrice").text(), n = $(".priceRangeCurrentPricesPanel .currentMaxPrice").text(); if (o.length > 0 && (a != l || s != n)) { var d = $('<span class="option">' + l + " - " + n + "</span>"); d.anchorCustomClick(i.find(".clearPriceRangeFilter")); var c = i.find(".toggleControl").text(), p = $('<li class="price-range-selected-ranges"><label>' + c + ":</label></li>"); p.append(d), r.append(p) } } e.find(".filter-block").has(".filterItemSelected").each(function (t, i) { var o = $("<li><label>" + $(i).children(".title").children("a.toggleControl").first().text() + ":</label></li>"); $(i).find(".filterItemSelected").each(function () { var t = $('<span class="option">' + $(this).text() + "</span>"); t.anchorCustomClick("usedropdowns" == e.attr("data-filtersuimode") ? $(this).parents(".filtersGroupPanel").siblings(".title").children(".clearFilterOptions") : $(this)), o.append(t) }), r.append(o) }), r.children().length > 0 ? t.show() : (t.hide(), e.prepend(t)) } function getProductsPanel() { var e = $(".nopAjaxFilters7Spikes").attr("data-productsGridPanelSelector") + "," + $(".nopAjaxFilters7Spikes").attr("data-ProductsListPanelSelector"), t = $(".master-wrapper-page " + e).not(".featured-product-grid").last(); return t } function initializeInfiniteScroll() { appendInfiniteScrollLoader(), $(".product-page-size, " + $(".nopAjaxFilters7Spikes").attr("data-pagerpanelselector")).hide(); var e = function () { $(window).off("scroll.filtersinfinitescroll resize.filtersinfinitescroll orientationchange.filtersinfinitescroll").on("scroll.filtersinfinitescroll resize.filtersinfinitescroll orientationchange.filtersinfinitescroll", function () { executeInfiniteScroll() }), executeInfiniteScroll() }; $(document).on("nopAjaxFiltersFiltrationCompleteEvent", e), window.location.hash && "#/noFilterApplied" != window.location.hash || e() } function executeInfiniteScroll() { var e = $(".pager .next-page > a").first(); if (0 == e.length) return void $(window).off("scroll.filtersinfinitescroll resize.filtersinfinitescroll orientationchange.filtersinfinitescroll"); var t = getProductsPanel(); if (0 != t.length) { var r = $(window).outerHeight(), i = $(window).scrollTop(), o = t.innerHeight(), a = t.offset().top; if (r + i > o + a) { $(".infinite-scroll-loader").show(); var s = new FiltersManager, l = parseInt(e.attr("data-pageNumber")); s.requestProductsForSelectedFilters(void 0, void 0, l, void 0, void 0, !0, !0) } } } function appendInfiniteScrollLoader() { if (0 == $(".infinite-scroll-loader").length) { var e = $(".ajaxBusyPanelParent"); 0 == e.length && (e = getProductsPanel()), e.append('<div class="infinite-scroll-loader">' + $(".nopAjaxFilters7Spikes").attr("data-infinitescrollloadertext") + "</div>") } } function showNumberOfReturnedProducts(e, t) { if (null != e || (e = parseInt($(".productsPageSizeDropDown .toplevel p").text()), !isNaN(e))) { t = parseInt(t), e > t && (e = t); var r = $(".nopAjaxFilters7Spikes").attr("data-numberofreturnedproductsselector") || ".product-viewmode", i = $(r), o = $(".number-of-returned-products.sample-element").first(); $(".number-of-returned-products").not(o).remove(); var a = o.clone(); a.removeClass("sample-element"), a.children(".productsPerPage").text(e), a.children(".allProductsReturned").text(t), 0 == i.length ? $(".product-selectors").append(a) : i.after(a), a.css("display", "").addClass("active") } } var nop7SpikesAjaxFiltersGridClass = "nop7SpikesAjaxFiltersGrid"; $(document).ready(function () { var e = new FiltersManager; e.addProductPanelAjaxBusyToPage(), $(".nopAjaxFilters7Spikes .block .title a.toggleControl").off("click").on("click", function () { expandableFiltersBlocks($(this)) }), $(".nopAjaxFilters7Spikes .block .title a.clearFilterOptions").each(function () { $(this).click({ filtersManager: e }, e.clearFilterOptions), $(this).hide() }), $(".nopAjaxFilters7Spikes .filtersDropDown a.allFilterDropDownOptions").each(function () { $(this).click({ filtersManager: e }, e.selectAllFilterDropDownOption) }); var t = $(".nopAjaxFilters7Spikes .filtersTitlePanel a.clearFilterOptionsAll"); if (t.click({ filtersManager: e }, e.clearAllFilterOptions), t.hide(), e.replaceSortAndViewOptionsDropDowns(), e.refreshProductsPager(), e.filtersUIMode == e.filtersUIModeEnum.useDropDowns) { var r = $(".filtersDropDownPanel.filtersGroupPanel"), i = r.length + 100; r.each(function () { $(this).css("z-index", i--) }) } "true" == $(".nopAjaxFilters7Spikes").attr("data-enableinfinitescroll").toLowerCase() && initializeInfiniteScroll() }), FiltersManager.prototype.getFilterItemStateBasedOnItemClass = function (e, t) { var r = t; switch (e) { case "filterItemUnselected": r = "Unchecked"; break; case "filterItemSelected": r = "Checked"; break; case "filterItemSelectedDisabled": r = "CheckedDisabled"; break; case "filterItemDisabled": r = "Disabled" } return r }, FiltersManager.prototype.getFilterItemClassBasedOnState = function (e, t) { var r = t; switch (e) { case 0: r = "filterItemUnselected"; break; case 1: r = "filterItemSelected"; break; case 2: r = "filterItemSelectedDisabled"; break; case 3: r = "filterItemDisabled" } return r }, FiltersManager.waitForAjaxRequest = !1, function (e) { e.fn.extend({ anchorCustomClick: function (t) { return e(this).first().on("click", function (r) { r.preventDefault(), e(t).trigger("click") }) } }) }(jQuery);
