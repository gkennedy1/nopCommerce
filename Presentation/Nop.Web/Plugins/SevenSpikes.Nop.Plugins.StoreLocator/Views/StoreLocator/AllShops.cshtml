@** Copyright 2015 Seven Spikes Ltd. All rights reserved. (http://www.nop-templates.com)
    * http://www.nop-templates.com/t/licensinginfo
*@

@using Nop.Core
@using Nop.Core.Infrastructure
@using Nop.Web.Extensions
@using SevenSpikes.Nop.Plugins.StoreLocator
@using SevenSpikes.Nop.Plugins.StoreLocator.Models
@using SevenSpikes.Nop.Plugins.StoreLocator.Domain.Enums

@model StoreLocatorModel
@{
    Layout = "~/Views/Shared/_ColumnsOne.cshtml";

    //title, meta
    Html.AddTitleParts(T("SevenSpikes.StoreLocator.Public.AllShops.PageTitle").Text);
    Html.AddMetaDescriptionParts(T("SevenSpikes.StoreLocator.Public.AllShops.PageMetaDescription").Text);
    Html.AddMetaKeywordParts(T("SevenSpikes.StoreLocator.Public.AllShops.PageMetaKeywords").Text);

    var supportRtl = this.ShouldUseRtlTheme();

    Html.AddCssFileParts("~/Plugins/SevenSpikes.Nop.Plugins.StoreLocator/Themes/" + Model.Theme + "/Content/StoreLocator.css");
    if (supportRtl)
    {
        Html.AddCssFileParts("~/Plugins/SevenSpikes.Nop.Plugins.StoreLocator/Themes/" + Model.Theme + "/Content/StoreLocator.rtl.css");
    }

    Html.AddScriptParts("~/Plugins/SevenSpikes.Core/Scripts/SevenSpikesExtensions.js");
    Html.AddScriptParts("~/Plugins/SevenSpikes.Nop.Plugins.StoreLocator/Scripts/StoreLocatorAllShops.min.js");

    string units = (Model.Settings.UnitsSystem == UnitsSystems.Metric ? T("SevenSpikes.StoreLocator.Public.Units.Kilometers") : T("SevenSpikes.StoreLocator.Public.Units.Miles")).ToString();
}

<div class="page all-shops-page">
    <div class="page-title store-locator-title">
        <h1>@T("SevenSpikes.StoreLocator.Public.Title")</h1>
    </div>
    <div class="page-body">
        @if (Model.Shops.Count > 0)
        {
            <div class="current-location-wrap">
                <a class="getUserGeoLocation">@T("SevenSpikes.StoreLocator.Public.UseMyLocation")</a>
                <span class="additional-info">@T("SevenSpikes.StoreLocator.Public.UseMyLocation.Hint")</span>
            </div>
            <div class="map-wrapper">
                <div id="all-shops-map-holder"></div>
                <input id="shop-address-input" type="text" placeholder="@T("SevenSpikes.StoreLocator.Public.SearchMyLocation")" />
            </div>
            <div id="directions-panel">
                <a id="backToResults">@T("SevenSpikes.StoreLocator.Public.BackToResults")</a>
            </div>
            <input type="hidden" class="shop-resources" data-youarehere="@T("SevenSpikes.StoreLocator.Public.YouAreHere")"
                   data-accuracy="@T("SevenSpikes.StoreLocator.Public.Accuracy")"
                   data-geolocationnotsupported="@T("SevenSpikes.StoreLocator.Public.GeoLocationNotSupported")"
                   data-pathtoimages="@Constants.PathToImagesFolder"
                   data-units="@Model.Settings.UnitsSystem.ToString()"
                   value="1" />
            <div class="shops-sorting-filtering-wrapper">
                <div class="shops-sorting-options">
                    <label for="sortingSelect">@T("SevenSpikes.StoreLocator.Public.Sortby")</label>
                    <select id="sortingSelect">
                        <option value="sortbydistance" disabled="disabled">@T("SevenSpikes.StoreLocator.Public.SortMethod.Distance")</option>
                        <option value="sortbyname">@T("SevenSpikes.StoreLocator.Public.SortMethod.Name")</option>
                        <option value="sortbyid" selected="selected">@T("SevenSpikes.StoreLocator.Public.SortMethod.DefaultOrder")</option>
                    </select>
                </div>
                <div id="searchRadiusWrapper" class="radiusFilterWrapper">
                    <span>@T("SevenSpikes.StoreLocator.Public.SortMethod.SearchForShopInRadius")</span>
                    <input type="number" value="@Model.Settings.DefaultDistanceRadius" id="searchRadius" />
                    <span>@units</span>
                </div>
                <div class="searchbytags-wrapper">
                    <label for="searchByTagsInput">@T("SevenSpikes.StoreLocator.Public.SearchByTag")</label>
                    <input type="text" value="" id="searchByTagsInput" />
                </div>
                <div class="shops-filtering-buttons">
                    <a id="clearShopFilters">@T("SevenSpikes.StoreLocator.Public.ClearFilters")</a>
                    <div class="button-wrap">
                        <button id="searchForFilteredShops">@T("SevenSpikes.StoreLocator.Public.SortMethod.Search")</button>
                    </div>
                </div>
            </div>
            <ul class="shops-list">
                @{
            int ind = 0;
                }
                @foreach (var shop in Model.Shops)
                {
                    <li class="shops-item visible" data-ind="@(ind++)">
                        @if (shop.DefaultShopImage != null)
                        {
                            <div class="picture-wrap">
                                <a class="picture-link" href="@Url.RouteUrl("HomePage")@shop.SeName" title="@shop.Name">
                                    <img class="picture-img" src="@shop.DefaultShopImage.PictureSrc" alt="@shop.DefaultShopImage.Alt" title="@shop.DefaultShopImage.Alt" />
                                </a>
                            </div>
                        }
                        <div class="info-wrap">
                            <h2 class="shop-name">
                                <a class="shop-link" href="@Url.RouteUrl("HomePage")@shop.SeName" title="@shop.Name">@shop.Name</a>
                            </h2>
                            <input type="hidden" class="distanceToShopValue" value="0" />
                            <div class="distance-line">
                                <label class="distance-label">@T("SevenSpikes.StoreLocator.Public.SortMethod.Distance"):</label>
                                <span class="distance-value">0 @units</span>
                            </div>
                            <a class="show-directions">@T("SevenSpikes.StoreLocator.Public.ShowDirections")</a>

                            @if (!String.IsNullOrWhiteSpace(shop.ShortDescription))
                            {
                                <div class="short-description">
                                    @Html.Raw(shop.ShortDescription)
                                </div>
                            }

                            @if (shop.TagsList.Count > 0)
                            {
                                <div class="tags">
                                    <label class="tags-label">@T("SevenSpikes.StoreLocator.Public.TagsTitle")</label>
                                    <ul class="tag-list">
                                        @foreach (var tag in shop.TagsList)
                                        {
                                            <li class="tag-item">@tag</li>
                                        }
                                    </ul>
                                </div>
                            }

                            <a class="read-more" href="@Url.RouteUrl("HomePage")@shop.SeName" title="@shop.Name">@T("SevenSpikes.StoreLocator.Public.ReadMore")</a>
                        </div>

                        <input type="hidden" class="shop-coordinates" data-latitude="@shop.Latitude" data-longitude="@shop.Longitude" data-shop-title="@shop.Name" value="1" />

                        <input type="hidden" class="shop-tags-hidden-field" value="@shop.Tags" />
                    </li>
                }
            </ul>
            <div class="no-results no-shops-after-filtering">@T("SevenSpikes.StoreLocator.Public.NoShopsAfterFiltering")</div>
        }
        else
        {
            <div class="no-results">@T("SevenSpikes.StoreLocator.Public.NoShops")</div>
        }
    </div>
</div>